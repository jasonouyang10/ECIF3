{
	"name": "msxEngagment",
	"properties": {
		"folder": {
			"name": "IOT Engagments"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "msxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "Engagements"
				},
				{
					"dataset": {
						"referenceName": "MSXEngagementTeam",
						"type": "DatasetReference"
					},
					"name": "engagementteam"
				},
				{
					"dataset": {
						"referenceName": "oemuser",
						"type": "DatasetReference"
					},
					"name": "oemuser"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MsxEngagement",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Exists1"
				},
				{
					"name": "Exists3"
				},
				{
					"name": "Union1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'cseo',\n\tfolderPath: 'standardized/transactional/msx/hub_vw_engagement/v1/standard') ~> Engagements\nsource(output(\n\t\tEngagementId as string,\n\t\tCrmInstanceId as string,\n\t\tSystemUserId as string,\n\t\tCreatedById as string,\n\t\tCreatedDate as timestamp,\n\t\tModifiedById as string,\n\t\tModifiedDate as timestamp,\n\t\tTenantId as integer,\n\t\tOdsCreatedDate as timestamp,\n\t\tOdsModifiedDate as timestamp,\n\t\tOdsStatus as integer,\n\t\tVersionNumber as long,\n\t\tPlatformCreatedDate as timestamp,\n\t\tPlatformModifiedDate as timestamp,\n\t\tPlatformModifiedDateAsInt as long,\n\t\textractid as string,\n\t\textractdatetime as timestamp,\n\t\tloadts as timestamp,\n\t\tdeltaactioncode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> engagementteam\nsource(output(\n\t\tsystemuserid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> oemuser\nEngagements, engagementteam exists(Engagements@EngagementId == engagementteam@EngagementId,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nEngagements, oemuser exists(OwnerId == systemuserid,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists3\nExists1, Exists3 union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}