{
	"name": "SalesProgram",
	"properties": {
		"folder": {
			"name": "Sales Program related Engagement"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "msxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "SalesProgram"
				},
				{
					"linkedService": {
						"referenceName": "msxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "EngagementSalesProgram"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "msxspSalesProgram",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "msxspEngagementSalesProgram",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Filter2"
				}
			],
			"script": "parameters{\n\tSalesProgramID1 as string ('4267d304-831d-eb11-a813-000d3a8ccf2f'),\n\tSalesProgramID2 as string ('45dde65e-831d-eb11-a813-000d3a8ccf2f')\n}\nsource(output(\n\t\tEDLPExtractId as string,\n\t\tCreatedById as string,\n\t\tCreatedDate as timestamp,\n\t\tCrmInstanceId as string,\n\t\tDescription as string,\n\t\tEndDate as timestamp,\n\t\tLevel as string,\n\t\tLevelCode as integer,\n\t\tLevelSeqNo as long,\n\t\tModifiedById as string,\n\t\tModifiedDate as timestamp,\n\t\tOdsCreatedDate as timestamp,\n\t\tOdsModifiedDate as timestamp,\n\t\tOdsStatus as integer,\n\t\tOwnerid as string,\n\t\towningBusinessUnit as string,\n\t\tProgramName as string,\n\t\tProgramSiteURL as string,\n\t\tProgramSubType as string,\n\t\tProgramType as string,\n\t\tSalesAdministrator as string,\n\t\tSalesProgramId as string,\n\t\tStartDate as timestamp,\n\t\tStateCode as integer,\n\t\tStatus as string,\n\t\tStatusCode as integer,\n\t\tStatusReason as string,\n\t\tStatusReasonSeqNo as long,\n\t\tStatusSeqNo as long,\n\t\tTenantId as integer,\n\t\tVersionNumber as long,\n\t\tEDLPExtractDateTime as timestamp,\n\t\tEDLPLoadTS as string,\n\t\tEDLPModifiedDateTime as timestamp,\n\t\tEDLPDeltaActionCode as string,\n\t\tExtractId as string,\n\t\tExtractDateTime as timestamp,\n\t\tLoadTS as timestamp,\n\t\tDeltaActionCode as string,\n\t\tPlatformCreatedDate as timestamp,\n\t\tPlatformModifiedDate as timestamp,\n\t\tPlatformModifiedDateAsInt as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'cseo',\n\tfolderPath: 'standardized/masterandreference/msx/hub_vw_salesprogram/v1/standard') ~> SalesProgram\nsource(output(\n\t\tEngagementId as string,\n\t\tCrmInstanceId as string,\n\t\tSalesProgramId as string,\n\t\tCreatedById as string,\n\t\tCreatedDate as timestamp,\n\t\tModifiedById as string,\n\t\tModifiedDate as timestamp,\n\t\tTenantId as integer,\n\t\tOdsCreatedDate as timestamp,\n\t\tOdsModifiedDate as timestamp,\n\t\tOdsStatus as integer,\n\t\tVersionNumber as long,\n\t\tPlatformCreatedDate as timestamp,\n\t\tPlatformModifiedDate as timestamp,\n\t\tPlatformModifiedDateAsInt as long,\n\t\textractid as string,\n\t\textractdatetime as timestamp,\n\t\tloadts as timestamp,\n\t\tdeltaactioncode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'cseo',\n\tfolderPath: 'standardized/transactional/msx/hub_vw_engagementsalesprograms/v1/standard') ~> EngagementSalesProgram\nEngagementSalesProgram filter(SalesProgramId== $SalesProgramID1 ||SalesProgramId ==$SalesProgramID2) ~> Filter2\nSalesProgram sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
		}
	}
}