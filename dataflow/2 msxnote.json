{
	"name": "2 msxnote",
	"properties": {
		"folder": {
			"name": "GBB Opportunity"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "msxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "msxnote"
				},
				{
					"dataset": {
						"referenceName": "GBBMember",
						"type": "DatasetReference"
					},
					"name": "ower"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "msxnote",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Exists1"
				},
				{
					"name": "filter1"
				}
			],
			"script": "source(output(\n\t\tEDLPExtractId as string,\n\t\tCreatedById as string,\n\t\tCreatedDate as timestamp,\n\t\tCrmInstanceId as string,\n\t\tDescription as string,\n\t\tFileName as string,\n\t\tIsDocument as boolean,\n\t\tModifiedById as string,\n\t\tModifiedDate as timestamp,\n\t\tNoteId as string,\n\t\tOdsCreatedDate as timestamp,\n\t\tOdsModifiedDate as timestamp,\n\t\tOdsStatus as integer,\n\t\tOwnerId as string,\n\t\towningBusinessUnit as string,\n\t\tRegardingEntityName as string,\n\t\tRegardingObjectId as string,\n\t\tTenantId as integer,\n\t\tTitle as string,\n\t\tVersionNumber as long,\n\t\tEDLPExtractDateTime as timestamp,\n\t\tEDLPLoadTS as string,\n\t\tEDLPModifiedDateTime as timestamp,\n\t\tEDLPDeltaActionCode as string,\n\t\tExtractId as string,\n\t\tExtractDateTime as timestamp,\n\t\tLoadTS as timestamp,\n\t\tDeltaActionCode as string,\n\t\tPlatformCreatedDate as timestamp,\n\t\tPlatformModifiedDate as timestamp,\n\t\tPlatformModifiedDateAsInt as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'cseo',\n\tfolderPath: 'standardized/masterandreference/msx/hub_vw_note/v1/standard') ~> msxnote\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ower\nmsxnote, ower exists(OwnerId == SystemUserId,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 filter(OdsStatus ==0) ~> filter1\nfilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}