{
	"name": "AccountFromCALC",
	"properties": {
		"folder": {
			"name": "AMMP"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "msxdatalake",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MSXAccount_AMMP",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PositionNumber as integer,",
				"          CustomerSalesAccountID as integer,",
				"          AccountSellerAssignmentGUID as string,",
				"          MSSalesTPID as integer,",
				"          CRMAccountID as string,",
				"          GSSGUID as string,",
				"          ContractNumber as string,",
				"          ContractDerivedID as long,",
				"          Qualifier1 as string,",
				"          Qualifier2 as string,",
				"          Role as string,",
				"          RoleType as string,",
				"          AssignmentStartDate as timestamp,",
				"          AssignmentEndDate as timestamp,",
				"          AssignmentStatus as string,",
				"          IsUserActive as boolean,",
				"          IsTBH as boolean,",
				"          DataSource as string,",
				"          AccountName as string,",
				"          AreaName as string,",
				"          SubsidiaryName as string,",
				"          ContractScheduleId as integer,",
				"          CreatedDate as timestamp,",
				"          CreatedByAlias as string,",
				"          LastModifiedDate as timestamp,",
				"          LastModifiedByAlias as string,",
				"          AssignmentType as string,",
				"          PlatformCreatedDate as timestamp,",
				"          PlatformModifiedDate as timestamp,",
				"          PlatformModifiedDateAsInt as long,",
				"          extractid as string,",
				"          extractdatetime as timestamp,",
				"          loadts as timestamp,",
				"          deltaactioncode as string,",
				"          Role_Summary as string,",
				"          ReasonCode as string,",
				"          Justification as string,",
				"          OrgDesc as string,",
				"          EDLPExtractId as string,",
				"          EDLPExtractDateTime as timestamp,",
				"          EDLPLoadTS as string,",
				"          EDLPModifiedDateTime as timestamp,",
				"          EDLPDeltaActionCode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'cseo',",
				"     folderPath: 'standardized/masterandreference/calc/eap_vw_cy_activeassignments/v1/standard') ~> source1",
				"source(output(",
				"          TPID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     fileSystem: 'input',",
				"     fileName: 'AMMP TPID.xlsx',",
				"     sheetName: 'AMMP TPID',",
				"     firstRowAsHeader: true) ~> source2",
				"source1, source2 exists(MSSalesTPID == TPID,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"exists1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}